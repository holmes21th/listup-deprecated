#!/usr/bin/env node
'use strict'

const loadJsonFile = require('load-json-file');
const repoUrl = require('get-repository-url');
const rp = require('request-promise');
const cheerio = require('cheerio');

(async () => {
  console.log('Searching...')

  const json = await loadJsonFile('package.json');

  const options = {
    transform: (body) => {
      return cheerio.load(body);
    }
  };

  const dependenciesKeyList = [
    `dependencies`,
    `devDependencies`,
    `peerDependencies`,
    `bundledDependencies`,
    `optionalDependencies`,
  ]

  await Promise.all(dependenciesKeyList.map(async dependenciesKey => {
    const dependencies = json[dependenciesKey] || {}
    // パッケージ名リスト生成
    let packageNameList = []
    for (let packageName in dependencies) {
      packageNameList.push(packageName)
    }
    await Promise.all(packageNameList.map(async packageName => {
      // パッケージ名リスト生成
      const packageRepoUrl = await repoUrl(packageName);
      // リポジトリページ取得
      const $result = await rp.get(packageRepoUrl, options);
      // GitHub は #readme らしい
      const readme = $result('#readme').text();
      // 検索文言は要調整
      const isDeprecatedResult = readme.match(/Deprecated/);
      const isDeprecated = isDeprecatedResult !== null

      if (isDeprecated)
        console.log(`  [${dependenciesKey}] ${packageName} is Deprecated...`);
    }))
  }))
})()
